AWSTemplateFormatVersion: 2010-09-09
Transform:
  - 'AWS::Serverless-2016-10-31'
Description: 'ses-dashboard-events'
Parameters:
  AWSEnv:
    Type: String
    Default: AWS
  STAGE:
    Type: String
    Default: 'pruebas'
  BounceSNSTopic:
    Type: String
    Description: >-
      The bounce Amazon SNS Topic that has been created for the SES  identity. 
      Sepcify the SNS Topic by using its Amazon Resource Name (ARN).  Examples: 
      arn:aws:sns:us-east-1:830321976775:ses-event

  WebhookBus:
    Type: String
    Description: >-
      Bus name of webhook events
    Default: webhooks
  EventSource:
    Type: String
    Description: >-
      Source identifier for events
    Default: io.febos.ses
  PrivateBucket:
    Type: String
    Description: >-
      Source identifier for bucket to store files received
    Default: febos-io
  PrincipalIdentity:
    Type: String
    Description: >-
      Identidad principal de emails, para configuraciones base
    Default: febos.cl

Conditions:
  IsProduccion: !Equals
    - !Ref STAGE
    - produccion
Globals:
  Function:
    Runtime: python3.9
    MemorySize: 256
    Timeout: 10
    Environment:
      Variables:
        TTL: '525600' #Minutos de TTL equivalente a un a√±o
        WEBHOOK_EVENT_BUS: !Ref WebhookBus
        SOURCE_EVENT: !Ref EventSource
Resources:
  SESEmailSuppressionNotificationTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName:
        'Fn::If':
          - IsProduccion
          - ses-email-suppression-notificaction
          - !Ref AWS::NoValue
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      StreamSpecification:
        StreamViewType: NEW_IMAGE
      BillingMode: PAY_PER_REQUEST
      ProvisionedThroughput:
        ReadCapacityUnits: 0
        WriteCapacityUnits: 0
      SSESpecification:
        SSEEnabled: true
      TimeToLiveSpecification:
        AttributeName: 'expiration'
        Enabled: true
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 0d7f8580-69ee-4297-a770-5cea5e7c801e
  SESEmailSuppressionnTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName:
        'Fn::If':
          - IsProduccion
          - ses-email-suppression
          - !Ref AWS::NoValue
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      #        - AttributeName: timestamp
      #          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      #        - AttributeName: timestamp
      #          KeyType: RANGE
      StreamSpecification:
        StreamViewType: NEW_IMAGE
      BillingMode: PAY_PER_REQUEST
      ProvisionedThroughput:
        ReadCapacityUnits: 0
        WriteCapacityUnits: 0
      SSESpecification:
        SSEEnabled: true
      TimeToLiveSpecification:
        AttributeName: 'expiration'
        Enabled: true
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 0d7f8580-69ee-4297-a770-5cea5e7c801e
  SESEmailTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName:
        'Fn::If':
          - IsProduccion
          - ses-email
          - !Ref AWS::NoValue
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      #        - AttributeName: timestamp
      #          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      #        - AttributeName: timestamp
      #          KeyType: RANGE
      StreamSpecification:
        StreamViewType: NEW_IMAGE
      BillingMode: PAY_PER_REQUEST
      ProvisionedThroughput:
        ReadCapacityUnits: 0
        WriteCapacityUnits: 0
      SSESpecification:
        SSEEnabled: true

      TimeToLiveSpecification:
        AttributeName: 'expiration'
        Enabled: true
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 0d7f8580-69ee-4297-a770-5cea5e7c801e
  SESEventsTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName:
        'Fn::If':
          - IsProduccion
          - ses-event
          - !Ref AWS::NoValue
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: timestamp
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
        - AttributeName: timestamp
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST
      ProvisionedThroughput:
        ReadCapacityUnits: 0
        WriteCapacityUnits: 0
      TimeToLiveSpecification:
        AttributeName: 'expiration'
        Enabled: true

      SSESpecification:
        SSEEnabled: true
      StreamSpecification:
        StreamViewType: NEW_IMAGE
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 0d7f8580-69ee-4297-a770-5cea5e7c801e
  SESEventsReceivedTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName:
        'Fn::If':
          - IsProduccion
          - ses-event-received
          - !Ref AWS::NoValue
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: timestamp
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
        - AttributeName: timestamp
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST
      ProvisionedThroughput:
        ReadCapacityUnits: 0
        WriteCapacityUnits: 0
      TimeToLiveSpecification:
        AttributeName: 'expiration'
        Enabled: true

      SSESpecification:
        SSEEnabled: true
      StreamSpecification:
        StreamViewType: NEW_IMAGE
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 0d7f8580-69ee-4297-a770-5cea5e7c801e
  SESEventsReferencesTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName:
        'Fn::If':
          - IsProduccion
          - ses-event-references
          - !Ref AWS::NoValue
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: reference
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
        - AttributeName: reference
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST
      ProvisionedThroughput:
        ReadCapacityUnits: 0
        WriteCapacityUnits: 0
      TimeToLiveSpecification:
        AttributeName: 'expiration'
        Enabled: true

      SSESpecification:
        SSEEnabled: true
      StreamSpecification:
        StreamViewType: NEW_IMAGE
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 0d7f8580-69ee-4297-a770-5cea5e7c801e


  SESSendEmailSQSDeadLeter:
    Type: 'AWS::SQS::Queue'
    Properties:
      MessageRetentionPeriod: 1209600
      QueueName:
        'Fn::If':
          - IsProduccion
          - ses-send-email-dead.fifo
          - !Ref AWS::NoValue
      FifoQueue: true
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 1edfa9a2-4dfd-4ea6-a050-ae0884b7dcdb
  SESSendEmailSQS:
    Type: 'AWS::SQS::Queue'
    Properties:
      MessageRetentionPeriod: 1209600
      QueueName:
        'Fn::If':
          - IsProduccion
          - ses-send-email.fifo
          - !Ref AWS::NoValue
      FifoQueue: true
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt SESSendEmailSQSDeadLeter.Arn
        maxReceiveCount: 4
      VisibilityTimeout: 30
    DependsOn:
      - SESSendEmailSQSDeadLeter
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 00450781-3848-447b-85e7-526f54cb68f2

  SESEventSQSDeadLeter:
    Type: 'AWS::SQS::Queue'
    Properties:
      MessageRetentionPeriod: 1209600
      QueueName:
        'Fn::If':
          - IsProduccion
          - ses-event-dead
          - !Ref AWS::NoValue
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 1edfa9a2-4dfd-4ea6-a050-ae0884b7dcdb
  SESEventSQS:
    Type: 'AWS::SQS::Queue'
    Properties:
      MessageRetentionPeriod: 1209600
      QueueName:
        'Fn::If':
          - IsProduccion
          - ses-event
          - !Ref AWS::NoValue
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt SESEventSQSDeadLeter.Arn
        maxReceiveCount: 2
      VisibilityTimeout: 10
    DependsOn:
      - SESEventSQSDeadLeter
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 00450781-3848-447b-85e7-526f54cb68f2
  SESEventSQSPolicy:
    Type: 'AWS::SQS::QueuePolicy'
    Properties:
      Queues:
        - !Ref SESEventSQS
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          Principal:
            Service: "sns.amazonaws.com"
          Action:
            - 'SQS:SendMessage'
            - 'SQS:ReceiveMessage'
          Effect: Allow
          Resource: !GetAtt SESEventSQS.Arn
          Condition:
            ArnEquals:
              'aws:SourceArn': !Ref BounceSNSTopic
    DependsOn:
      - SESEventSQS
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 321fa85f-b167-4be6-bdbf-ac675f03f754
  SESEventSQSSubscription:
    Type: 'AWS::SNS::Subscription'
    Properties:
      Protocol: sqs
      RawMessageDelivery: true
      Endpoint: !GetAtt SESEventSQS.Arn
      TopicArn: !Ref BounceSNSTopic
    DependsOn:
      - SESEventSQS
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 7756bc4d-50de-4721-9457-5297a5bb3078

  ProcessSESQueue:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: src/
      Handler: handle_ses_notifications.handler
      FunctionName:
        'Fn::If':
          - IsProduccion
          - ses-event-process
          - !Ref AWS::NoValue
      Environment:
        Variables:
          TABLE_EVENT_NAME: !Ref SESEventsTable
          TABLE_EMAIL_NAME: !Ref SESEmailTable
          TABLE_EMAIL_SUPPRESSION_NAME: !Ref SESEmailSuppressionnTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref SESEmailTable
        - DynamoDBCrudPolicy:
            TableName: !Ref SESEventsTable
        - DynamoDBCrudPolicy:
            TableName: !Ref SESEmailSuppressionnTable
        - S3ReadPolicy:
            BucketName: '*'
        - EventBridgePutEventsPolicy:
            EventBusName: '*'
        - SQSSendMessagePolicy:
            QueueName: '*'
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - 'ses:SendEmail'
                - 'ses:SendRawEmail'
              Resource: '*'
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - 'ses:SendEmail'
                - 'ses:SendRawEmail'
              Resource: '*'
      Events:
        SESEventSQSEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt SESEventSQS.Arn
            BatchSize: 1
    Metadata:
      'AWS::CloudFormation::Designer':
        id: bce22d8f-5cbc-4935-aa75-d9b30ea96d3a
  ProcessSESQueueLogGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      LogGroupName: !Sub '/aws/lambda/${ProcessSESQueue}'
      RetentionInDays: 7
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 29f463bb-b3e3-4cb1-b8b7-e2eb5bdd3a95
  ProcessSESSendQueue:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: src/
      Handler: ses_send_notification_sqs.handler
      Timeout: 30
      FunctionName:
        'Fn::If':
          - IsProduccion
          - ses-send-email-process
          - !Ref AWS::NoValue
      Environment:
        Variables:
          TABLE_EVENT_NAME: !Ref SESEventsTable
          TABLE_EMAIL_NAME: !Ref SESEmailTable
          TABLE_EMAIL_SUPPRESSION_NAME: !Ref SESEmailSuppressionnTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref SESEmailTable
        - EventBridgePutEventsPolicy:
            EventBusName: '*'
        - DynamoDBCrudPolicy:
            TableName: !Ref SESEventsTable
        - DynamoDBCrudPolicy:
            TableName: !Ref SESEmailSuppressionnTable
        - S3ReadPolicy:
            BucketName: '*'
        - SQSSendMessagePolicy:
            QueueName: '*'
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - 'ses:SendEmail'
                - 'ses:SendRawEmail'
              Resource: '*'
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - 'ses:SendEmail'
                - 'ses:SendRawEmail'
              Resource: '*'
      Events:
        SESEventSQSEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt SESSendEmailSQS.Arn
            BatchSize: 1
            ScalingConfig:
              MaximumConcurrency: 7
    Metadata:
      'AWS::CloudFormation::Designer':
        id: bce22d8f-5cbc-4935-aa75-d9b30ea96d3a
  ProcessEmailSyncOS:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: src/
      Handler: sync_dynamo_os.handler
      Timeout: 30
      FunctionName:
        'Fn::If':
          - IsProduccion
          - ses-send-email-sync-os
          - !Ref AWS::NoValue
      Environment:
        Variables:
          TABLE_EVENT_NAME: !Ref SESEventsTable
          TABLE_EMAIL_NAME: !Ref SESEmailTable
          TABLE_EMAIL_SUPPRESSION_NAME: !Ref SESEmailSuppressionnTable
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - 'es:*'
                - 'dynamodb:*'
              Resource: '*'
      Events:
        DDBEvent:
          Type: DynamoDB
          Properties:
            Stream:
              !GetAtt SESEmailTable.StreamArn   # This must be the name of a DynamoDB table declared in the same template file
            StartingPosition: TRIM_HORIZON
            BatchSize: 1
            Enabled: true
        DDBEventSupression:
          Type: DynamoDB
          Properties:
            Stream:
              !GetAtt SESEmailSuppressionnTable.StreamArn   # This must be the name of a DynamoDB table declared in the same template file
            StartingPosition: TRIM_HORIZON
            BatchSize: 1
            Enabled: true
        DDBEventSupressionNotification:
          Type: DynamoDB
          Properties:
            Stream:
              !GetAtt SESEmailSuppressionNotificationTable.StreamArn   # This must be the name of a DynamoDB table declared in the same template file
            StartingPosition: TRIM_HORIZON
            BatchSize: 1
            Enabled: true
        DDBEventEvents:
          Type: DynamoDB
          Properties:
            Stream:
              !GetAtt   SESEventsTable.StreamArn   # This must be the name of a DynamoDB table declared in the same template file
            StartingPosition: TRIM_HORIZON
            BatchSize: 1
            Enabled: true
        DDBEmailReceivedEvents:
          Type: DynamoDB
          Properties:
            Stream:
              !GetAtt   SESEventsReceivedTable.StreamArn   # This must be the name of a DynamoDB table declared in the same template file
            StartingPosition: TRIM_HORIZON
            BatchSize: 1
            Enabled: true
        DDBEmailReferencesEvents:
          Type: DynamoDB
          Properties:
            Stream:
              !GetAtt   SESEventsReferencesTable.StreamArn   # This must be the name of a DynamoDB table declared in the same template file
            StartingPosition: TRIM_HORIZON
            BatchSize: 1
            Enabled: true
  ProcessSESSendQueueLogGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      LogGroupName: !Sub '/aws/lambda/${ProcessSESSendQueue}'
      RetentionInDays: 7
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 29f463bb-b3e3-4cb1-b8b7-e2eb5bdd3a95
  SendNotificationFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: src/
      Handler: ses_send_email.handler
      FunctionName:
        'Fn::If':
          - IsProduccion
          - ses-send-email
          - !Ref AWS::NoValue
      Environment:
        Variables:
          TABLE_EVENT_NAME: !Ref SESEventsTable
          TABLE_EMAIL_NAME: !Ref SESEmailTable
          TABLE_EMAIL_SUPPRESSION_NAME: !Ref SESEmailSuppressionnTable
          SQS_URL: !GetAtt SESSendEmailSQS.QueueName
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref SESEmailTable
        - DynamoDBCrudPolicy:
            TableName: !Ref SESEmailSuppressionnTable
        - S3ReadPolicy:
            BucketName: '*'
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - 'sqs:*'
              Resource: !GetAtt SESSendEmailSQS.Arn
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - 'ses:SendEmail'
                - 'ses:SendRawEmail'
              Resource: '*'
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - 'ses:SendEmail'
                - 'ses:SendRawEmail'
              Resource: '*'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: c97126fc-566e-4d2e-bec6-a4275cd5e294
  SendNotificationFunctionLogGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      LogGroupName: !Sub '/aws/lambda/${SendNotificationFunction}'
      RetentionInDays: 7
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 29f463bb-b3e3-4cb1-b8b7-e2eb5bdd3a95



  ## SESS_RECEPCION

  SesHandlerReceivedFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: src/
      Handler: handle_ses_email_received.handler
      Timeout: 300
      Environment:
        Variables:
          TABLE_EMAIL_RECEIVED_NAME: !Ref SESEventsReceivedTable
          TABLE_EMAIL_REFERENCES_NAME: !Ref SESEventsReferencesTable
          SQS_URL: !GetAtt SESSendEmailSQS.QueueName
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref SESEventsReceivedTable
        - DynamoDBCrudPolicy:
            TableName: !Ref SESEventsReferencesTable
        - S3FullAccessPolicy:
            BucketName: '*'
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - 'sqs:*'
              Resource: !GetAtt SESSendEmailSQS.Arn
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - 'events:*'
                - 'ses:SendEmail'
                - 'ses:SendRawEmail'
              Resource: '*'
      Events:
        SESEventSQSEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt EmailNotificationQueue.Arn
            BatchSize: 5
            FunctionResponseTypes:
              - ReportBatchItemFailures
  SesHandlerReceivedFunctionLogGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      LogGroupName: !Sub '/aws/lambda/${SesHandlerReceivedFunction}'
      RetentionInDays: 7
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 29f463bb-b3e3-4cb1-b8b7-e2eb5bdd3a95

  EmailNotificationQueue:
    Type: AWS::SQS::Queue
    Properties:
      MessageRetentionPeriod: 1209600
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt EmailNotificationDeadLetterQueue.Arn
        maxReceiveCount: 3
      VisibilityTimeout: 300
    DependsOn: EmailNotificationDeadLetterQueue

  EmailNotificationTopic:
    Type: AWS::SNS::Topic
    DependsOn:
      - EmailNotificationQueue

  EmailNotificationQueueTopicSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: sqs
      TopicArn: !Ref EmailNotificationTopic
      Endpoint: !GetAtt EmailNotificationQueue.Arn
      RawMessageDelivery: true
    DependsOn:
      - EmailNotificationTopic
      - EmailNotificationQueue

  EmailNotificationDeadLetterQueue:
    Type: AWS::SQS::Queue
    Properties:
      MessageRetentionPeriod: 1209600

  CommandsQueue:
    Type: AWS::SQS::Queue
    Properties:
      MessageRetentionPeriod: 1209600
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt EmailNotificationDeadLetterQueue.Arn
        maxReceiveCount: 3
      VisibilityTimeout: 180
    DependsOn: EmailNotificationDeadLetterQueue

  EmailNotificationQueuePermissions:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref EmailNotificationQueue
      PolicyDocument:
        Statement:
          - Action:
              - 'SQS:SendMessage'
            Effect: Allow
            Resource: !GetAtt EmailNotificationQueue.Arn
            Principal:
              AWS: '*'
            Condition:
              ArnLike:
                'aws:SourceArn':
                  - !Ref EmailNotificationTopic
    DependsOn: EmailNotificationQueue

  EmailReceiver:
    Type: AWS::SES::ReceiptRuleSet

  EmailReceiverCatchAllRule:
    Type: AWS::SES::ReceiptRule
    Properties:
      RuleSetName: !Ref EmailReceiver
      Rule:
        Enabled: true
        ScanEnabled: true
        Recipients:
          - 'Fn::If':
              - IsProduccion
              - !Sub cases.${PrincipalIdentity}
              - !Sub cases-${STAGE}.${PrincipalIdentity}
          - 'Fn::If':
              - IsProduccion
              - !Sub inbound.${PrincipalIdentity}
              - !Sub inbound-${STAGE}.${PrincipalIdentity}
          - 'Fn::If':
              - IsProduccion
              - !Sub inbox.${PrincipalIdentity}
              - !Sub inbox-${STAGE}.${PrincipalIdentity}
        Actions:
          - S3Action:
              BucketName: !Ref PrivateBucket
              ObjectKeyPrefix: !Sub 'email/${STAGE}/inbox'
              TopicArn: !Ref EmailNotificationTopic
          - StopAction:
              Scope: RuleSet
    DependsOn:
      - EmailReceiver
      - EmailNotificationTopic

Outputs:
  SESEventsReceivedTableName:
    Value: !Ref SESEventsReceivedTable
    Export:
      Name: !Sub "${AWS::StackName}-TABLE-EMAIL-RECEIVED-NAME"
